name: tl-results-and-certification
resources:
  repositories:
    - repository: self
      persistCredentials: true
      clean: true
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/operations-devops-pipeline-templates
    - repository: infrastructureTemplates
      type: github
      endpoint: DfE-Digital
      name: SkillsFundingAgency/tl-shared-infrastructure

trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

variables:
  - group: Common Shared Resources
  - name: buildConfiguration
    value: 'release'
  - name: buildPlatform
    value: 'anycpu'

stages:
  - stage: buildStage
    displayName: Build Stage
    jobs:
      - job: buildAppJob
        displayName: Build App Job
        pool:
          name: 'Azure Pipelines'
          vmImage: 'windows-2019'
        workspace:
          clean: all
        steps:
          - task: gittools.gitversion.gitversion-task.GitVersion@5
            displayName: GitVersion

          - task: Npm@1
            displayName: 'npm install'
            inputs: 
              workingDir: src/Sfa.Tl.ResultsAndCertification.Web
              verbose: false

          - task: Gulp@0
            displayName: 'gulp'
            inputs:
              gulpFile: src/Sfa.Tl.ResultsAndCertification.Web/gulpfile.js

          - task: DotNetCoreCLI@2
            displayName: dot restore
            inputs:
              command: restore
              projects: 'src/Sfa.Tl.ResultsAndCertification.sln'
              noCache: true
              feedsToUse: config
              nugetConfigPath: src/NuGet.config

          - task: DotNetCoreCLI@2
            displayName: dotnet build
            inputs:
              projects: 'src/Sfa.Tl.ResultsAndCertification.sln'
              arguments: '--configuration $(buildConfiguration) --no-restore'
              
          - task: DotNetCoreCLI@2
            displayName: Unit Tests
            inputs:
              command: test
              projects: '**/*.UnitTests.csproj'
              arguments: '--configuration $(buildConfiguration) --no-build'
              
          - task: DotNetCoreCLI@2
            displayName: 'Publish Internal API'
            inputs:
              command: publish
              publishWebProjects: false
              projects: 'src/Sfa.Tl.ResultsAndCertification.InternalApi/Sfa.Tl.ResultsAndCertification.InternalApi.csproj'
              arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore  --no-build'

          - task: DotNetCoreCLI@2
            displayName: 'Publish Web App'
            inputs:
              command: publish
              publishWebProjects: false
              projects: 'src/Sfa.Tl.ResultsAndCertification.Web/Sfa.Tl.ResultsAndCertification.Web.csproj'
              arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore  --no-build'
          - pwsh: |
              Get-ChildItem -r
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
            inputs:
              Contents: |
                azure\**
                config\**
                powershell\**
                src\**\*.IntegrationTests
              TargetFolder: '$(build.artifactstagingdirectory)/'
              OverWrite: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)/'
              ArtifactName: 'appdrop'
              publishLocation: 'Container'
      - job: buildSqlDb
        displayName: Build SQL Job
        pool:
          name: 'Azure Pipelines'
          vmImage: 'windows-2019'
        workspace:
          clean: all
        steps:
          - task: VSBuild@1
            displayName: 'Build DACPAC'
            inputs:
              solution: 'src/Sfa.Tl.ResultsAndCertification.Database/Sfa.Tl.ResultsAndCertification.Database.sqlproj'
              platform: '$(buildPlatform)'
              configuration: '$(buildConfiguration)'
              msbuildArgs: '/p:PackageLocation="$(build.artifactstagingdirectory)/publish"'
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
            inputs:
              Contents: |
                src\**\*.dacpac
              TargetFolder: '$(build.artifactstagingdirectory)/'
              OverWrite: true
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)/'
              ArtifactName: 'sqldrop'
              publishLocation: 'Container'
    
  - stage: Dev
    displayName: Dev
    dependsOn:
      buildstage
    
    variables:
      - group: Dev Shared Resources
      - name: ResourceGroupName
        value: '$[variables.ResourceIdentifier]$[variables.ResourceEnvironmentName]-$(ServiceName)-rg'
      - name: ServiceName
        value: 'resac'
      - name: AspSize
        value: '1'
      - name: AspInstances
        value: '1'
      - name: UICustomHostName
        value: 'dev.manage-tlevel-results.tlevels.gov.uk'
      - name: UICertificateName
        value: 'dev-manage-tlevel-results-tlevels-gov-uk'
      - name: DatabaseTier
        value: 'Standard'

    jobs:
      - job: createInfrastructure
        displayName: Create Infrastructure
        steps:
          - task: AzureResourceGroupDeployment@2
            displayName: 'Azure Deployment:Create Or Update Resource Group action on $(ResourceGroupName)'
            inputs:
              azureSubscription: 'S126-TL-Dev-Service-Connection'
              resourceGroupName: '$(ResourceGroupName)'
              location: 'West Europe'
              csmFile: '$(System.DefaultWorkingDirectory)/tl-results-and-certification/drop/azure/template.json'
              overrideParameters: '-resourceEnvironmentName "$(ResourceEnvironmentName)" -environmentName "$(EnvironmentName)" -serviceName "$(ServiceName)" -resourceIdentifier "$(ResourceIdentifier)" -aspSize "$(AspSize)" -aspInstances $(AspInstances) -uiCustomHostname "$(UICustomHostName)" -uiCertificateName "$(UICertificateName)" -apiCustomHostname "" -apiCertificateName -internalApiCustomHostname "" -internalApiCertificateName -keyVaultResourceGroupName "$(SharedResourceGroupName)" -keyVaultName "$(SharedKeyVaultName)" -sharedSqlResourceGroup "$(SharedResourceGroupName)" -sharedSqlServerName "$(SharedSqlServerName)" -databaseSkuName "$(DatabaseSKUName)" -databaseTier "$(DatabaseTier)" -configurationStorageConnectionString "$(ConfigurationStorageConnectionString)"'
              deploymentOutputs: DeploymentOutputs

      - job: runIntegrationtest
        displayName: Run integrationtest
        dependsOn: createInfrastructure
        pool:
          name: 'Azure Pipelines'
          vmImage: 'windows-2019'
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'appdrop'
              downloadPath: '$(System.ArtifactsDirectory)'
          - pwsh: |
              Get-ChildItem -r
          - task: DotNetCoreCLI@2
            displayName: Integration Tests
            inputs:
              command: publish
              publishWebProjects: false
              projects: '$(System.ArtifactsDirectory)\*.IntegrationTests.csproj'
              arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'

