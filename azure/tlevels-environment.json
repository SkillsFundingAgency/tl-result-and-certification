{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environmentNameAbbreviation": {
            "type": "string"
        },
        "resourceNamePrefix": {
            "type": "string"
        },
        "sharedASPName": {
            "type": "string"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "sharedKeyVaultName": {
            "type": "string"
        },
        "sharedSQLServerName": {
            "type": "string"
        },
        "sqlDatabaseSkuName": {
            "type": "string"
        },
        "sqlDatabaseTier": {
            "type": "string"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "uiCustomHostName": {
            "type": "string"
        },
        "certificateName": {
            "type": "string"
        },
        "internalApiCustomHostname": {
            "type": "string",
            "defaultValue": ""
        },
        "internalApiCertificateName": {
            "type": "string",
            "defaultValue": ""
        },
        "functionCustomHostname": {
            "type": "string",
            "defaultValue": ""
        },
        "functionCertificateName": {
            "type": "string",
            "defaultValue": ""
        },
        "storageAccountContainerArray": {
            "type": "array",
            "metadata": {
                "description": "An array of container names to create in the storage account."
            }
        },
        "learnerVerificationAndLearningEventsTrigger": {
            "type": "string"
        },
        "learnerGenderTrigger": {
            "type": "string"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/DFE-Digital/operations-devops-deployment/master/ArmTemplates/",
        "uiAppName": "[concat(parameters('resourceNamePrefix'), '-web')]",
        "internalApiAppName": "[concat(parameters('resourceNamePrefix'), '-internal-api')]",
        "appInsightName": "[concat(parameters('resourceNamePrefix'), '-ai')]",
        "workerFunctionAppName": "[concat(parameters('resourceNamePrefix'), '-func-worker')]",
        "sqlDatabaseName": "[concat(parameters('resourceNamePrefix'), '-sqldb')]",
        "storageAccountName": "[replace(concat(parameters('resourceNamePrefix'), 'str'), '-', '')]"

    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('storage-account','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'storage-account-arm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('storage-account-container', parameters('storageAccountContainerArray')[copyIndex()])]",
            "type": "Microsoft.Resources/deployments",
            "condition": "[greater(length(parameters('storageAccountContainerArray')), 0)]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'storage-container.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "containerName": {
                        "value": "[parameters('storageAccountContainerArray')[copyIndex()]]"
                    },
                    "publicAccess": {
                        "value": "None"
                    }
                }
            },
            "copy": {
                "name": "storageaccountcontainercopy",
                "count": "[length(parameters('storageAccountContainerArray'))]"
            },
            "dependsOn": [
                "[concat('storage-account','-', parameters('environmentNameAbbreviation'))]"
            ]
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('app-insights','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('appInsightName')]"
                    },
                    "attachedService": {
                        "value": "[variables('uiAppName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('ui-app-service-certificate','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('certificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('ui-app-service','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('uiAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[parameters('sharedASPName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    },
                    "appServiceAppSettings": {
                        "value": [
                            {
                                "name": "EnvironmentName",
                                "value": "[toUpper(parameters('environmentNameAbbreviation'))]"
                            },
                            {
                                "name": "ConfigurationStorageConnectionString",
                                "value": "[parameters('configurationStorageConnectionString')]"
                            },
                            {
                                "name": "Version",
                                "value": "1.0"
                            },
                            {
                                "name": "ServiceName",
                                "value": "Sfa.Tl.ResultsAndCertification"
                            },
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference(concat('app-insights','-',parameters('environmentNameAbbreviation'))).outputs.InstrumentationKey.value]"
                            }
                        ]
                    },
                    "customHostName": {
                        "value": "[parameters('uiCustomHostName')]"
                    },
                    "certificateThumbprint": {
                        "value": "[reference(concat('ui-app-service-certificate','-',parameters('environmentNameAbbreviation'))).outputs.certificateThumbprint.value]"
                    }
                }
            },
            "dependsOn": [
                "[concat('ui-app-service-certificate','-', parameters('environmentNameAbbreviation'))]"
            ]
        },
        {
            "condition": "[greater(length(parameters('internalApiCertificateName')), 0)]",
            "apiVersion": "2017-05-10",
            "name": "[concat('internal-api-app-service-certificate','-',parameters('environmentNameAbbreviation'))]",
            "resourceGroup": "[resourceGroup().name]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('internalApiCertificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('internal-api-app-service','-',parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('internalApiAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[parameters('sharedASPName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    },
                    "appServiceAppSettings": {
                        "value": [
                            {
                                "name": "EnvironmentName",
                                "value": "[toUpper(parameters('environmentNameAbbreviation'))]"
                            },
                            {
                                "name": "ConfigurationStorageConnectionString",
                                "value": "[parameters('configurationStorageConnectionString')]"
                            },
                            {
                                "name": "Version",
                                "value": "1.0"
                            },
                            {
                                "name": "ServiceName",
                                "value": "Sfa.Tl.ResultsAndCertification"
                            },
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference(concat('app-insights','-',parameters('environmentNameAbbreviation'))).outputs.InstrumentationKey.value]"
                            }
                        ]
                    },
                    "appServiceConnectionStrings": {
                        "value": [
                        ]
                    },
                    "customHostName": {
                        "value": "[parameters('internalApiCustomHostname')]"
                    },
                    "certificateThumbprint": {
                        "value": "[if(greater(length(parameters('internalApiCustomHostname')), 0), reference(concat('internal-api-app-service-certificate','-',parameters('environmentNameAbbreviation')), '2018-11-01').outputs.certificateThumbprint.value, '')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('internal-api-app-service-certificate','-', parameters('environmentNameAbbreviation'))]"
            ]
        },
        {
            "condition": "[greater(length(parameters('functionCertificateName')), 0)]",
            "apiVersion": "2017-05-10",
            "name": "[concat('function-app-certificate','-',parameters('environmentNameAbbreviation'))]",
            "resourceGroup": "[resourceGroup().name]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('functionCertificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('function-app','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'function-app.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('workerFunctionAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[parameters('sharedASPName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    },
                    "functionAppAppSettings": {
                        "value": [
                            {
                                "name": "EnvironmentName",
                                "value": "[toUpper(parameters('environmentNameAbbreviation'))]"
                            },
                            {
                                "name": "ConfigurationStorageConnectionString",
                                "value": "[parameters('configurationStorageConnectionString')]"
                            },
                            {
                                "name": "Version",
                                "value": "1.0"
                            },
                            {
                                "name": "ServiceName",
                                "value": "Sfa.Tl.ResultsAndCertification"
                            },
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference(concat('app-insights','-',parameters('environmentNameAbbreviation'))).outputs.InstrumentationKey.value]"
                            },
                            {
                                "name": "BlobStorageConnectionString",
                                "value": "[reference(concat('storage-account','-',parameters('environmentNameAbbreviation'))).outputs.storageConnectionString.value]"
                            },
                            {
                                "name": "AzureWebJobsStorage",
                                "value": "[reference(concat('storage-account','-',parameters('environmentNameAbbreviation'))).outputs.storageConnectionString.value]"
                            },
                            {
                                "name": "AzureWebJobsDashboard",
                                "value": "[reference(concat('storage-account','-',parameters('environmentNameAbbreviation'))).outputs.storageConnectionString.value]"
                            },
                            {
                                "name": "WEBSITE_TIME_ZONE",
                                "value": "GMT Standard Time"
                            },
                            {
                                "name": "FUNCTIONS_EXTENSION_VERSION",
                                "value": "~3"
                            },
                            {
                                "name": "LearnerVerificationAndLearningEventsTrigger",
                                "value": "[parameters('learnerVerificationAndLearningEventsTrigger')]"
                            },
                            {
                                "name": "LearnerGenderTrigger",
                                "value": "[parameters('learnerGenderTrigger')]"
                            },
                            {
                                "name": "WEBSITE_LOAD_CERTIFICATES",
                                "value": "1"
                            }
                        ]
                    },
                    "customHostName": {
                        "value": "[parameters('functionCustomHostname')]"
                    },
                    "certificateThumbprint": {
                        "value": "[if(greater(length(parameters('functionCertificateName')), 0), reference(concat('function-app-certificate','-',parameters('environmentNameAbbreviation')), '2018-11-01').outputs.certificateThumbprint.value, '')]"
                    },
                    "systemAssignedIdentity": "SystemAssigned"
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('function-app-access-policy','-', parameters('environmentNameAbbreviation'))]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'keyvault-access-policy.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedEnvResourceGroup')]"
                    },
                    "keyVaultAccessPolicies": [
                        {
                            "objectId": "[reference(concat('ui-app-service','-',parameters('environmentNameAbbreviation'))).outputs.Identity.PrincipalId.value]",
                            "tenantId": "[subscription().tenantId]",
                            "permissions": {
                                "keys": [
                                    "All"
                                ],
                                "certificates": [
                                    "All"
                                ],
                                "secrets": [
                                    "All"
                                ]
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('function-app','-', parameters('environmentNameAbbreviation'))]"
            ]

        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('sql-database','-', parameters('environmentNameAbbreviation'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'sql-database.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "databaseName": {
                        "value": "[variables('sqlDatabaseName')]"
                    },
                    "sqlServerName": {
                        "value": "[parameters('sharedSQLServerName')]"
                    },
                    "databaseSkuName": {
                        "value": "[parameters('sqlDatabaseSkuName')]"
                    },
                    "databaseTier": {
                        "value": "[parameters('sqlDatabaseTier')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('sql-server-firewall-rules','-', parameters('environmentNameAbbreviation'))]",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'sql-server-firewall-rules.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "firewallRuleNamePrefix": {
                        "value": "AZURE_IP-"
                    },
                    "ipAddresses": {
                        "value": "[union(reference(concat('ui-app-service','-',parameters('environmentNameAbbreviation'))).outputs.possibleOutboundIpAddresses.value, reference(concat('function-app','-',parameters('environmentNameAbbreviation'))).outputs.possibleOutboundIpAddresses.value)]"
                    },
                    "serverName": {
                        "value": "[parameters('sharedSQLServerName')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "sqlDatabaseName": {
            "type": "string",
            "value": "[variables('sqlDatabaseName')]"
        },
        "uiAppName": {
            "type": "string",
            "value": "[variables('uiAppName')]"
        },
        "internalApiAppName": {
            "type": "string",
            "value": "[variables('internalApiAppName')]"
        },
        "workerFunctionAppName": {
            "type": "string",
            "value": "[variables('workerFunctionAppName')]"
        },
        "BlobStorageConnectionString": {
            "type": "string",
            "value": "[reference(concat('storage-account','-', parameters('environmentNameAbbreviation'))).outputs.storageConnectionString.value]"
        }
    }
}