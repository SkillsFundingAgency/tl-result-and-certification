parameters:
  - name: BaseName
    type: string
  - name: serviceConnection
    type: string
  - name: sharedEnvironmentId
    type: string
  - name: environmentName
    type: string
jobs:
  - job: DeployInfrastructure
    variables:
      SharedASPName: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.sharedASPName'] ]
      SharedKeyVaultName: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.sharedKeyVaultName'] ]
      SharedSQLServerName: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.sharedSQLServerName'] ]
      ConfigurationStorageConnectionString: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.configStorageConnectionString'] ]
      SharedResourceGroup: $[stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.SharedVariables.SharedResourceGroup']]

    steps:
      - checkout: self
        submodules: true
      - pwsh: |
          'Write-Host "SharedResourceGroup variable: $(SharedResourceGroup)"'
          'Write-Host "SharedASPName variable: $(SharedASPName)"'
          'Write-Host "SharedKeyVaultName variable: $(SharedKeyVaultName)"'
          'Write-Host "SharedSQLServerName variable: $(SharedSQLServerName)"'
          'Write-Host "ConfigurationStorageConnectionString variable: $(ConfigurationStorageConnectionString)"'
        displayName: "Show Variables"

      - template: ./Infrastructure/steps/deploy-template.yml@devopsTemplates
        parameters:
          serviceConnection: ${{ parameters.serviceConnection }}
          subscriptionId: $(subscriptionId)
          resourceGroupName: $(ResourceGroupName)
          location: "West Europe"
          templateFilePath: "./platform/azure/tlevels-environment.bicep"
          armParameterOverrideString:
            '-environmentNameAbbreviation "${{parameters.environmentName}}"
            -resourceNamePrefix "${{parameters.BaseName}}"
            -sharedASPName "$(SharedASPName)"
            -sharedEnvResourceGroup "$(SharedResourceGroup)"
            -sharedKeyVaultName "$(SharedKeyVaultName)"
            -sharedSQLServerName "$(SharedSQLServerName)"
            -sqlDatabaseSkuName "$(SQLDatabaseSkuName)"
            -sqlDatabaseTier "$(SQLDatabaseTier)"
            -sqlserverlessAutoPauseDelay "$(SQLServerlessAutoPauseDelay)"
            -configurationStorageConnectionString "$(ConfigurationStorageConnectionString)"
            -uiCustomHostName "$(UICustomHostName)"
            -uiCertificateName "$(CertificateName)"
            -functionCertificateName "$(LearningRecordServiceCertificateName)"
            -storageAccountContainerArray "$(storageAccountContainerArray)"
            -certificatePrintingBatchesCreateTrigger "0 0 0 1 1 2"
            -certificatePrintingBatchSummaryTrigger "$(CertificatePrintingBatchSummaryTrigger)"
            -certificatePrintingRequestTrigger "$(CertificatePrintingRequestTrigger)"
            -certificatePrintingTrackBatchTrigger "$(CertificatePrintingTrackBatchTrigger)"
            -learnerGenderTrigger "$(LearnerGenderTrigger)"
            -learnerVerificationAndLearningEventsTrigger "$(LearnerVerificationAndLearningEventsTrigger)"
            -overallResultCalculationTrigger "0 0 0 1 1 2"
            -ucasTransferAmendmentsTrigger "0 0 0 1 1 2"
            -ucasTransferEntriesTrigger "0 0 0 1 1 2"
            -ucasTransferResultsTrigger "0 0 0 1 1 2"'
          tags: $(Tags) 
          processOutputs: true

      - task: AzureCLI@2
        displayName: 'Add function access to Keyvault'
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: |
            $functionAppObjectId = az functionapp identity show -n $(armOutputs.armOutput.functionAppName) -g $(ResourceGroupName) --query "principalId"
            Write-Host $functionAppObjectId
            az keyvault set-policy --name $(SharedKeyVaultName) --object-id $functionAppObjectId --secret-permissions "get" --key-permissions "get" --certificate-permissions "get"


     