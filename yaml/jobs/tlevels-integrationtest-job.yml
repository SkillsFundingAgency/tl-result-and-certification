  parameters:
  - name: serviceConnection
    type: string
  - name: sharedEnvironmentId
    type: string
  - name: environmentName
    type: string
    # value: "[toUpper(parameters('environmentName'))]"
  
  jobs:
  - job: 'IntegrationTest'
    pool:
      name: 'Azure Pipelines'
      vmImage: 'windows-2019'
    workspace:
      clean: all
    dependsOn:
    - DeployInfrastructure 
    - DeploySQLDatabase
    - GenerateConfigs
    condition: or(eq('${{ parameters.environmentName }}', 'DEV'), eq('${{ parameters.environmentName }}', 'TST'))

    variables:
      SharedSQLServerName: $[ stageDependencies.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.outputs['DeploySharedInfrastructure_${{parameters.sharedEnvironmentId}}.armOutputs.armOutput.sharedSQLServerName'] ]
      environmentName: $[toUpper(parameters('environmentName'))]

    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'sqldrop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: SqlAzureDacpacDeployment@1
      displayName: 'Azure SQL Dacpac - Integration Test'
      inputs:
        azureSubscription: ${{ parameters.serviceConnection }}
        ServerName: '$(SharedSQLServerName).database.windows.net'
        DatabaseName: '$(IntTestDatabaseName)'
        SqlUsername: '$(SQLServerAdminUsername)'
        SqlPassword: '$(SQLServerAdminPassword)'
        DacpacFile: '$(System.ArtifactsDirectory)\sqldrop\src\Sfa.Tl.ResultsAndCertification.Database\bin\Release\Sfa.Tl.ResultsAndCertification.Database.dacpac'
        AdditionalArguments: '/v:environment=DevIntegration'
    
    - task: DownloadBuildArtifacts@0
      inputs:
          buildType: "current"
          downloadType: "single"
          artifactName: "appdrop"
          downloadPath: "$(System.ArtifactsDirectory)"

    - task: ExtractFiles@1
      displayName: 'Extract Integration test files '
      inputs:
        archiveFilePatterns: '$(System.ArtifactsDirectory)\appdrop\Sfa.Tl.ResultsAndCertification.IntegrationTests.zip'
        destinationFolder: '$(Agent.TempDirectory)\IntegrationTests'
    
    - task: TotalALM.totalalm-tokenization.tokenization-build-task.Tokenization@2
      displayName: 'Tokenization: Transform file *.json'
      enabled: true
      inputs:
        SourcePath: '$(Agent.TempDirectory)\IntegrationTests\'
        TargetFileNames: '*.json'
        RecursiveSearch: true
        RequireVariable: false
        TokenStart: "_"
        TokenEnd: "_"


    - task: VSTest@2
      displayName: 'Run Integration tests'
      inputs:
        testAssemblyVer2: '**\Sfa.Tl.ResultsAndCertification.IntegrationTests.dll'
        searchFolder: '$(Agent.TempDirectory)\IntegrationTests'
        runInParallel: false
        failOnMinTestsNotRun: false